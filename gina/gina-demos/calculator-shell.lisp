;;;-*-Mode:LISP; Syntax: Common-Lisp;Package:calc;-*-

;; !!! Do not edit !!!
;; This code was generated by the GINA Interface Builder.

(in-package :calc)

(defclass calculator-shell
          (document-shell)
          ((frame-7 :accessor frame-7) (form-7 :accessor form-7)
           (display-frame :accessor display-frame) (key-pad :accessor key-pad)
           (equal-sign :accessor equal-sign)
           (clear-button :accessor clear-button)
           (rubout-button :accessor rubout-button) (display :accessor display)
           (digit-7 :accessor digit-7) (digit-8 :accessor digit-8)
           (digit-9 :accessor digit-9) (plus-sign :accessor plus-sign)
           (digit-4 :accessor digit-4) (digit-5 :accessor digit-5)
           (digit-6 :accessor digit-6) (minus-sign :accessor minus-sign)
           (digit-1 :accessor digit-1) (digit-2 :accessor digit-2)
           (digit-3 :accessor digit-3) (multiply-sign :accessor multiply-sign)
           (digit-0 :accessor digit-0) (decimal-point :accessor decimal-point)
           (no-button :accessor no-button) (divide-sign :accessor divide-sign))
          (:documentation ""))
(defun make-calculator-shell (doc &key (initargs nil) (motif-resources nil)
                              (class 'calculator-shell) &aux box)
  (setq box
        (make-document-shell
          doc
          :class
          class
          :initargs
          initargs
          :with-menu
          nil
          :motif-resources
          motif-resources))
  (setf (frame-7 box) (make-frame box :name "frame-7"))
  (setf (form-7 box) (make-form (frame-7 box) :name "form-7"))
  (setf (display-frame box) (make-frame (form-7 box) :name "display-frame"))
  (setf (display box)
        (make-label (display-frame box)
                    "0"
                    :name
                    "display"
                    :alignment
                    :end
                    :recompute-size
                    nil))
  (setf (key-pad box)
        (make-row-column
          (form-7 box)
          :name
          "key-pad"
          :orientation
          :horizontal
          :num-columns
          4
          :spacing
          3))
  (setf (digit-7 box)
        (make-push-button
          (key-pad box)
          "7"
          :name
          "digit-7"
          :recompute-size
          nil))
  (setf (digit-8 box)
        (make-push-button
          (key-pad box)
          "8"
          :name
          "digit-8"
          :recompute-size
          nil))
  (setf (digit-9 box)
        (make-push-button
          (key-pad box)
          "9"
          :name
          "digit-9"
          :recompute-size
          nil))
  (setf (plus-sign box)
        (make-push-button
          (key-pad box)
          "+"
          :name
          "plus-sign"
          :recompute-size
          nil))
  (setf (digit-4 box)
        (make-push-button
          (key-pad box)
          "4"
          :name
          "digit-4"
          :recompute-size
          nil))
  (setf (digit-5 box)
        (make-push-button
          (key-pad box)
          "5"
          :name
          "digit-5"
          :recompute-size
          nil))
  (setf (digit-6 box)
        (make-push-button
          (key-pad box)
          "6"
          :name
          "digit-6"
          :recompute-size
          nil))
  (setf (minus-sign box)
        (make-push-button
          (key-pad box)
          "-"
          :name
          "minus-sign"
          :recompute-size
          nil))
  (setf (digit-1 box)
        (make-push-button
          (key-pad box)
          "1"
          :name
          "digit-1"
          :recompute-size
          nil))
  (setf (digit-2 box)
        (make-push-button
          (key-pad box)
          "2"
          :name
          "digit-2"
          :recompute-size
          nil))
  (setf (digit-3 box)
        (make-push-button
          (key-pad box)
          "3"
          :name
          "digit-3"
          :recompute-size
          nil))
  (setf (multiply-sign box)
        (make-push-button
          (key-pad box)
          "*"
          :name
          "multiply-sign"
          :recompute-size
          nil))
  (setf (digit-0 box)
        (make-push-button
          (key-pad box)
          "0"
          :name
          "digit-0"
          :recompute-size
          nil))
  (setf (decimal-point box)
        (make-push-button
          (key-pad box)
          "."
          :name
          "decimal-point"
          :recompute-size
          nil))
  (setf (no-button box)
        (make-push-button
          (key-pad box)
          "    "
          :name
          "no-button"
          :recompute-size
          nil
          :sensitive
          nil))
  (setf (divide-sign box)
        (make-push-button
          (key-pad box)
          ":"
          :name
          "divide-sign"
          :recompute-size
          nil))
  (setf (equal-sign box)
        (make-push-button
          (form-7 box)
          "  =  "
          :name
          "equal-sign"
          :recompute-size
          nil))
  (setf (clear-button box)
        (make-push-button
          (form-7 box)
          "Clear"
          :name
          "clear-button"
          :recompute-size
          nil))
  (setf (rubout-button box)
        (make-push-button
          (form-7 box)
          "Rubout"
          :name
          "Rubout-Button"
          :recompute-size
          nil))
  (define-form-constraint
    (display-frame box)
    :top-attachment
    :form
    :top-offset
    3
    :left-attachment
    :form
    :left-offset
    3
    :right-attachment
    :form
    :right-offset
    3
    :bottom-attachment
    :none)
  (define-form-constraint
    (key-pad box)
    :top-attachment
    :form
    :top-offset
    32
    :left-attachment
    :form
    :left-offset
    0
    :right-attachment
    :none
    :bottom-attachment
    :none)
  (define-form-constraint
    (equal-sign box)
    :top-attachment
    :widget
    :top-widget
    (key-pad box)
    :top-offset
    3
    :left-attachment
    :none
    :right-attachment
    :opposite-widget
    :right-widget
    (key-pad box)
    :right-offset
    3
    :bottom-attachment
    :none)
  (define-form-constraint
    (clear-button box)
    :top-attachment
    :widget
    :top-widget
    (key-pad box)
    :top-offset
    3
    :left-attachment
    :form
    :left-offset
    3
    :right-attachment
    :none
    :bottom-attachment
    :none)
  (define-form-constraint
    (rubout-button box)
    :top-attachment
    :widget
    :top-widget
    (key-pad box)
    :top-offset
    3
    :left-attachment
    :widget
    :left-widget
    (clear-button box)
    :left-offset
    3
    :right-attachment
    :widget
    :right-widget
    (equal-sign box)
    :right-offset
    3
    :bottom-attachment
    :none)
  (setf (activate-callback (equal-sign box))
        (make-callback 'type-operator doc nil))
  (setf (activate-callback (clear-button box)) (make-callback 'clear doc))
  (setf (activate-callback (rubout-button box))
        (make-callback 'type-rubout doc))
  (setf (activate-callback (digit-7 box)) (make-callback 'type-digit doc 7))
  (setf (activate-callback (digit-8 box)) (make-callback 'type-digit doc 8))
  (setf (activate-callback (digit-9 box)) (make-callback 'type-digit doc 9))
  (setf (activate-callback (plus-sign box))
        (make-callback 'type-operator doc '+))
  (setf (activate-callback (digit-4 box)) (make-callback 'type-digit doc 4))
  (setf (activate-callback (digit-5 box)) (make-callback 'type-digit doc 5))
  (setf (activate-callback (digit-6 box)) (make-callback 'type-digit doc 6))
  (setf (activate-callback (minus-sign box))
        (make-callback 'type-operator doc '-))
  (setf (activate-callback (digit-1 box)) (make-callback 'type-digit doc 1))
  (setf (activate-callback (digit-2 box)) (make-callback 'type-digit doc 2))
  (setf (activate-callback (digit-3 box)) (make-callback 'type-digit doc 3))
  (setf (activate-callback (multiply-sign box))
        (make-callback 'type-operator doc '*))
  (setf (activate-callback (digit-0 box)) (make-callback 'type-digit doc 0))
  (setf (activate-callback (decimal-point box))
        (make-callback 'type-point doc))
  (setf (activate-callback (divide-sign box))
        (make-callback 'type-operator doc '/))
  box)
