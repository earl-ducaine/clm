;;;-*-Mode:LISP; Syntax: Common-Lisp;Package:gina;-*-

;; !!! Do not edit !!!
;; This code was generated by the GINA Interface Builder.

(in-package :gina)

(defclass subclass-dialog
          (modeless-dialog-box)
          ((main-form :accessor main-form)
           (buttons-form :accessor buttons-form)
           (class-row-column :accessor class-row-column)
           (selections-form :accessor selections-form)
           (subclass-header :accessor subclass-header)
           (show-button :accessor show-button)
           (save-button :accessor save-button)
           (file-name-text :accessor file-name-text)
           (dismiss-button :accessor dismiss-button)
           (name-of-subclass-text :accessor name-of-subclass-text)
           (generate-buttons :accessor generate-buttons)
           (class-slots-selection :accessor class-slots-selection)
           (class-slot-label :accessor class-slot-label)
           (methods-label :accessor methods-label)
           (methods-selection :accessor methods-selection)
           (instance-slots-selection :accessor instance-slots-selection)
           (instance-slot-label :accessor instance-slot-label)
           (key-label :accessor key-label)
           (key-selection :accessor key-selection))
          (:documentation ""))
(defun make-subclass-dialog (doc &key (initargs nil) (motif-resources nil)
                             (class 'subclass-dialog) &aux box)
  (setq box
        (make-modeless-dialog-box
          "Subclass Dialog"
          :class
          class
          :initargs
          initargs
          :resize
          t
          :allow-shell-resize
          t
          :document
          doc
          :motif-resources
          motif-resources))
  (setf (main-form box) (make-form box :name "main-form"))
  (setf (buttons-form box) (make-form (main-form box) :name "buttons-form"))
  (setf (show-button box)
        (make-push-button
          (buttons-form box)
          "Show Code within Browser"
          :name
          "show-button"))
  (setf (save-button box)
        (make-push-button
          (buttons-form box)
          "Save Code on File"
          :name
          "save-button"))
  (setf (file-name-text box)
        (make-labeled-text
          (buttons-form box)
          "File:"
          :name
          "file-name-text"
          :value
          "/tmp/class-code"
          :columns
          30
          :motif-resources
          '(:margin-height 5 :margin-width 4)))
  (setf (dismiss-button box)
        (make-push-button (buttons-form box) "Dismiss" :name "dismiss-button"))
  (define-form-constraint
    (show-button box)
    :top-attachment
    :form
    :top-offset
    11
    :left-attachment
    :form
    :left-offset
    13
    :right-attachment
    :none
    :bottom-attachment
    :none)
  (define-form-constraint
    (save-button box)
    :top-attachment
    :widget
    :top-widget
    (show-button box)
    :top-offset
    26
    :left-attachment
    :form
    :left-offset
    13
    :right-attachment
    :none
    :bottom-attachment
    :none)
  (define-form-constraint
    (file-name-text box)
    :top-attachment
    :widget
    :top-widget
    (save-button box)
    :top-offset
    26
    :left-attachment
    :form
    :left-offset
    13
    :right-attachment
    :none
    :bottom-attachment
    :none)
  (define-form-constraint
    (dismiss-button box)
    :top-attachment
    :form
    :top-offset
    11
    :left-attachment
    :none
    :right-attachment
    :form
    :right-offset
    0
    :bottom-attachment
    :none)
  (setf (class-row-column box)
        (make-row-column (main-form box) :name "class-row-column"))
  (setf (name-of-subclass-text box)
        (make-labeled-text
          (class-row-column box)
          "New Name:"
          :name
          "name-of-subclass-text"))
  (setf (generate-buttons box)
        (make-toggle-button-group
          (class-row-column box)
          '(("Class Definition" :class) ("Overriden Methods" :method)
            ("Constructor Function" :constructor))
          :name
          "generate-buttons"
          :label-string
          "Generate..."))
  (setf (selections-form box)
        (make-form (main-form box) :name "selections-form"))
  (setf (class-slots-selection box)
        (make-scrollable-selection-list
          (selections-form box)
          nil
          :name
          "class-slots-selection"
          :visible-item-count
          4
          :selection-policy
          :multiple))
  (setf (class-slot-label box)
        (make-label (selections-form box)
                    "Choose Class Slots and ..."
                    :name
                    "class-slot-label"))
  (setf (methods-label box)
        (make-label (selections-form box)
                    "Choose Methods to Override"
                    :name
                    "methods-label"))
  (setf (methods-selection box)
        (make-scrollable-selection-list
          (selections-form box)
          nil
          :name
          "methods-selection"
          :visible-item-count
          4
          :selection-policy
          :multiple))
  (setf (instance-slots-selection box)
        (make-scrollable-selection-list
          (selections-form box)
          nil
          :name
          "instance-slots-selection"
          :visible-item-count
          4
          :selection-policy
          :multiple))
  (setf (instance-slot-label box)
        (make-label (selections-form box)
                    "... Instance Slots to Override"
                    :name
                    "instance-slot-label"))
  (setf (key-label box)
        (make-label (selections-form box)
                    "Choose key-Parameters to Pass"
                    :name
                    "key-label"))
  (setf (key-selection box)
        (make-scrollable-selection-list
          (selections-form box)
          nil
          :name
          "key-selection"
          :visible-item-count
          4
          :selection-policy
          :multiple))
  (define-form-constraint
    (class-slots-selection box)
    :top-attachment
    :widget
    :top-widget
    (class-slot-label box)
    :top-offset
    0
    :left-attachment
    :form
    :left-offset
    5
    :right-attachment
    :position
    :right-position
    49
    :bottom-attachment
    :position
    :bottom-position
    49)
  (define-form-constraint
    (class-slot-label box)
    :top-attachment
    :form
    :top-offset
    0
    :left-attachment
    :form
    :left-offset
    5
    :right-attachment
    :none
    :bottom-attachment
    :none)
  (define-form-constraint
    (methods-label box)
    :top-attachment
    :widget
    :top-widget
    (class-slots-selection box)
    :top-offset
    15
    :left-attachment
    :form
    :left-offset
    5
    :right-attachment
    :none
    :bottom-attachment
    :none)
  (define-form-constraint
    (methods-selection box)
    :top-attachment
    :widget
    :top-widget
    (methods-label box)
    :top-offset
    0
    :left-attachment
    :form
    :left-offset
    5
    :right-attachment
    :position
    :right-position
    49
    :bottom-attachment
    :form
    :bottom-offset
    0)
  (define-form-constraint
    (instance-slots-selection box)
    :top-attachment
    :widget
    :top-widget
    (instance-slot-label box)
    :top-offset
    0
    :left-attachment
    :position
    :left-position
    50
    :right-attachment
    :form
    :right-offset
    5
    :bottom-attachment
    :position
    :bottom-position
    49)
  (define-form-constraint
    (instance-slot-label box)
    :top-attachment
    :opposite-widget
    :top-widget
    (class-slot-label box)
    :top-offset
    0
    :left-attachment
    :position
    :left-position
    50
    :right-attachment
    :none
    :bottom-attachment
    :none)
  (define-form-constraint
    (key-label box)
    :top-attachment
    :opposite-widget
    :top-widget
    (methods-label box)
    :top-offset
    0
    :left-attachment
    :opposite-widget
    :left-widget
    (key-selection box)
    :left-offset
    0
    :right-attachment
    :none
    :bottom-attachment
    :none)
  (define-form-constraint
    (key-selection box)
    :top-attachment
    :opposite-widget
    :top-widget
    (methods-selection box)
    :top-offset
    0
    :left-attachment
    :position
    :left-position
    50
    :right-attachment
    :form
    :right-offset
    5
    :bottom-attachment
    :form
    :bottom-offset
    0)
  (setf (subclass-header box)
        (make-label (main-form box)
                    "Define Subclass of"
                    :name
                    "subclass-header"
                    :alignment
                    :beginning))
  (define-form-constraint
    (buttons-form box)
    :top-attachment
    :widget
    :top-widget
    (subclass-header box)
    :top-offset
    3
    :left-attachment
    :widget
    :left-widget
    (class-row-column box)
    :left-offset
    0
    :right-attachment
    :none
    :bottom-attachment
    :none)
  (define-form-constraint
    (class-row-column box)
    :top-attachment
    :widget
    :top-widget
    (subclass-header box)
    :top-offset
    10
    :left-attachment
    :form
    :left-offset
    0
    :right-attachment
    :none
    :bottom-attachment
    :none)
  (define-form-constraint
    (selections-form box)
    :top-attachment
    :widget
    :top-widget
    (class-row-column box)
    :top-offset
    14
    :left-attachment
    :form
    :left-offset
    0
    :right-attachment
    :form
    :right-offset
    0
    :bottom-attachment
    :form
    :bottom-offset
    10)
  (define-form-constraint
    (subclass-header box)
    :top-attachment
    :form
    :top-offset
    5
    :left-attachment
    :position
    :left-position
    27
    :right-attachment
    :none
    :bottom-attachment
    :none)
  (define-form-constraint
    (main-form box)
    :left-attachment
    :form
    :right-attachment
    :form
    :top-attachment
    :form
    :bottom-attachment
    :form)
  (setf (activate-callback (dismiss-button box)) (make-callback 'pop-down box))
  box)
