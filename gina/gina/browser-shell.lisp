;;;-*-Mode:LISP; Syntax: Common-Lisp;Package:gina;-*-

;; !!! Do not edit !!!
;; This code was generated by the GINA Interface Builder.

(in-package :gina)

(defclass browser-document-shell
          (document-shell)
          ((browser-window :accessor browser-window)
           (scroller-form :accessor scroller-form)
           (description-form :accessor description-form)
           (function-form :accessor function-form)
           (method-form :accessor method-form)
           (class-form :accessor class-form)
           (function-header :accessor function-header)
           (function-list :accessor function-list)
           (function-filter-form :accessor function-filter-form)
           (function-search-text :accessor function-search-text)
           (function-filter-button :accessor function-filter-button)
           (method-header :accessor method-header)
           (override-group :accessor override-group)
           (method-list :accessor method-list)
           (method-filter-form :accessor method-filter-form)
           (method-search-text :accessor method-search-text)
           (method-filter-button :accessor method-filter-button)
           (class-header :accessor class-header)
           (class-list :accessor class-list)
           (class-filter-form :accessor class-filter-form)
           (class-search-text :accessor class-search-text)
           (class-filter-button :accessor class-filter-button)
           (description-label :accessor description-label)
           (description-text :accessor description-text))
          (:documentation ""))
(defun make-browser-document-shell (doc &key (initargs nil)
                                    (motif-resources nil)
                                    (class 'browser-document-shell) &aux box)
  (setq box
        (make-document-shell
          doc
          :class
          class
          :initargs
          initargs
          :motif-resources
          motif-resources))
  (setf (browser-window box) (make-paned-window box :name "browser-window"))
  (setf (scroller-form box)
        (make-form (browser-window box) :name "scroller-form"))
  (setf (function-form box)
        (make-form (scroller-form box) :name "function-form"))
  (setf (function-header box)
        (make-label (function-form box)
                    "Functions"
                    :name
                    "function-header"
                    :alignment
                    :beginning))
  (setf (function-list box)
        (make-scrollable-selection-list
          (function-form box)
          nil
          :name
          "function-list"))
  (setf (function-filter-form box)
        (make-form (function-form box) :name "function-filter-form"))
  (setf (function-search-text box)
        (make-text (function-filter-form box)
                   :name
                   "function-search-text"
                   :columns
                   10))
  (setf (function-filter-button box)
        (make-toggle-button
          (function-filter-form box)
          "Filter:"
          :name
          "function-filter-button"
          :recompute-size
          nil))
  (define-form-constraint
    (function-search-text box)
    :top-attachment
    :form
    :top-offset
    0
    :left-attachment
    :widget
    :left-widget
    (function-filter-button box)
    :left-offset
    0
    :right-attachment
    :form
    :right-offset
    0
    :bottom-attachment
    :form
    :bottom-offset
    0)
  (define-form-constraint
    (function-filter-button box)
    :top-attachment
    :form
    :top-offset
    0
    :left-attachment
    :form
    :left-offset
    0
    :right-attachment
    :none
    :bottom-attachment
    :form
    :bottom-offset
    0)
  (define-form-constraint
    (function-header box)
    :top-attachment
    :form
    :top-offset
    0
    :left-attachment
    :form
    :left-offset
    0
    :right-attachment
    :form
    :right-offset
    0
    :bottom-attachment
    :none)
  (define-form-constraint
    (function-list box)
    :top-attachment
    :widget
    :top-widget
    (function-header box)
    :top-offset
    0
    :left-attachment
    :form
    :left-offset
    5
    :right-attachment
    :form
    :right-offset
    5
    :bottom-attachment
    :widget
    :bottom-widget
    (function-filter-form box)
    :bottom-offset
    5)
  (define-form-constraint
    (function-filter-form box)
    :top-attachment
    :none
    :left-attachment
    :form
    :left-offset
    0
    :right-attachment
    :form
    :right-offset
    0
    :bottom-attachment
    :form
    :bottom-offset
    0)
  (setf (method-form box) (make-form (scroller-form box) :name "method-form"))
  (setf (method-header box)
        (make-label (method-form box)
                    "Methods"
                    :name
                    "method-header"
                    :alignment
                    :beginning))
  (setf (override-group box)
        (make-option-menu
          (method-form box)
          '(("All" :all) ("All Common" :sometimes) ("Commonly Called" :called)
            ("Commonly Overriden" :overriden))
          :name
          "override-group"
          :label-string
          "Show"))
  (setf (method-list box)
        (make-scrollable-selection-list
          (method-form box)
          nil
          :name
          "method-list"))
  (setf (method-filter-form box)
        (make-form (method-form box) :name "method-filter-form"))
  (setf (method-search-text box)
        (make-text (method-filter-form box)
                   :name
                   "method-search-text"
                   :columns
                   10))
  (setf (method-filter-button box)
        (make-toggle-button
          (method-filter-form box)
          "Filter:"
          :name
          "method-filter-button"
          :recompute-size
          nil))
  (define-form-constraint
    (method-search-text box)
    :top-attachment
    :form
    :top-offset
    0
    :left-attachment
    :widget
    :left-widget
    (method-filter-button box)
    :left-offset
    0
    :right-attachment
    :form
    :right-offset
    0
    :bottom-attachment
    :form
    :bottom-offset
    0)
  (define-form-constraint
    (method-filter-button box)
    :top-attachment
    :form
    :top-offset
    0
    :left-attachment
    :form
    :left-offset
    0
    :right-attachment
    :none
    :bottom-attachment
    :form
    :bottom-offset
    0)
  (define-form-constraint
    (method-header box)
    :top-attachment
    :form
    :top-offset
    0
    :left-attachment
    :form
    :left-offset
    0
    :right-attachment
    :form
    :right-offset
    0
    :bottom-attachment
    :none)
  (define-form-constraint
    (override-group box)
    :top-attachment
    :none
    :left-attachment
    :form
    :left-offset
    0
    :right-attachment
    :form
    :right-offset
    0
    :bottom-attachment
    :widget
    :bottom-widget
    (method-filter-form box)
    :bottom-offset
    5)
  (define-form-constraint
    (method-list box)
    :top-attachment
    :widget
    :top-widget
    (method-header box)
    :top-offset
    0
    :left-attachment
    :form
    :left-offset
    5
    :right-attachment
    :form
    :right-offset
    5
    :bottom-attachment
    :widget
    :bottom-widget
    (override-group box)
    :bottom-offset
    5)
  (define-form-constraint
    (method-filter-form box)
    :top-attachment
    :none
    :left-attachment
    :form
    :left-offset
    0
    :right-attachment
    :form
    :right-offset
    2
    :bottom-attachment
    :form
    :bottom-offset
    0)
  (setf (class-form box) (make-form (scroller-form box) :name "class-form"))
  (setf (class-header box)
        (make-label (class-form box)
                    "Classes"
                    :name
                    "class-header"
                    :alignment
                    :beginning))
  (setf (class-list box)
        (make-scrollable-selection-list
          (class-form box)
          nil
          :name
          "class-list"))
  (setf (class-filter-form box)
        (make-form (class-form box) :name "class-filter-form"))
  (setf (class-search-text box)
        (make-text (class-filter-form box)
                   :name
                   "class-search-text"
                   :columns
                   9))
  (setf (class-filter-button box)
        (make-toggle-button
          (class-filter-form box)
          "Filter:"
          :name
          "class-filter-button"
          :recompute-size
          nil))
  (define-form-constraint
    (class-search-text box)
    :top-attachment
    :form
    :top-offset
    0
    :left-attachment
    :widget
    :left-widget
    (class-filter-button box)
    :left-offset
    0
    :right-attachment
    :form
    :right-offset
    0
    :bottom-attachment
    :form
    :bottom-offset
    0)
  (define-form-constraint
    (class-filter-button box)
    :top-attachment
    :form
    :top-offset
    0
    :left-attachment
    :form
    :left-offset
    0
    :right-attachment
    :none
    :bottom-attachment
    :form
    :bottom-offset
    0)
  (define-form-constraint
    (class-header box)
    :top-attachment
    :form
    :top-offset
    0
    :left-attachment
    :form
    :left-offset
    0
    :right-attachment
    :form
    :right-offset
    0
    :bottom-attachment
    :none)
  (define-form-constraint
    (class-list box)
    :top-attachment
    :widget
    :top-widget
    (class-header box)
    :top-offset
    0
    :left-attachment
    :form
    :left-offset
    5
    :right-attachment
    :form
    :right-offset
    5
    :bottom-attachment
    :widget
    :bottom-widget
    (class-filter-form box)
    :bottom-offset
    5)
  (define-form-constraint
    (class-filter-form box)
    :top-attachment
    :none
    :left-attachment
    :form
    :left-offset
    0
    :right-attachment
    :form
    :right-offset
    0
    :bottom-attachment
    :form
    :bottom-offset
    0)
  (define-form-constraint
    (function-form box)
    :top-attachment
    :form
    :top-offset
    0
    :left-attachment
    :position
    :left-position
    68
    :right-attachment
    :form
    :right-offset
    0
    :bottom-attachment
    :form
    :bottom-offset
    10)
  (define-form-constraint
    (method-form box)
    :top-attachment
    :form
    :top-offset
    0
    :left-attachment
    :position
    :left-position
    32
    :right-attachment
    :position
    :right-position
    68
    :bottom-attachment
    :form
    :bottom-offset
    10)
  (define-form-constraint
    (class-form box)
    :top-attachment
    :form
    :top-offset
    0
    :left-attachment
    :form
    :left-offset
    0
    :right-attachment
    :position
    :right-position
    32
    :bottom-attachment
    :form
    :bottom-offset
    10)
  (setf (description-form box)
        (make-form (browser-window box) :name "description-form"))
  (setf (description-label box)
        (make-label (description-form box)
                    "Description"
                    :name
                    "description-label"
                    :alignment
                    :beginning))
  (setf (description-text box)
        (make-scrolled-text
          (description-form box)
          :name
          "description-text"
          :value
          "For the description"
          :columns
          60
          :rows
          15
          :editable
          nil
          :motif-resources
          '(:margin-height 5 :margin-width 5)))
  (define-form-constraint
    (description-label box)
    :top-attachment
    :form
    :top-offset
    0
    :left-attachment
    :form
    :left-offset
    0
    :right-attachment
    :form
    :right-offset
    0
    :bottom-attachment
    :none)
  (define-form-constraint
    (description-text box)
    :top-attachment
    :widget
    :top-widget
    (description-label box)
    :top-offset
    3
    :left-attachment
    :form
    :left-offset
    3
    :right-attachment
    :form
    :right-offset
    3
    :bottom-attachment
    :form
    :bottom-offset
    3)
  (define-pane-constraint
    (scroller-form box)
    :minimum
    1
    :maximum
    1000
    :skip-adjust
    nil
    :allow-resize
    nil)
  (define-pane-constraint
    (description-form box)
    :minimum
    1
    :maximum
    1000
    :skip-adjust
    nil
    :allow-resize
    nil)
  (setf (value-changed-callback (function-list box))
        (make-callback 'function-selected doc))
  (setf (value-changed-callback (method-list box))
        (make-callback 'method-selected doc))
  (setf (value-changed-callback (class-list box))
        (make-callback 'class-selected doc))
  box)
